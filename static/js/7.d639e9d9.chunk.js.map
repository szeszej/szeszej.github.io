{"version":3,"sources":["data/models/item-set.model.ts","data/item-sets.ts","components/items-display/items-table/item-line/ItemLine.tsx","components/items-display/items-table/ItemsTable.tsx","components/items-display/ItemsDisplay.tsx"],"names":["ItemSet","setProperties","name","hp","mana","endurance","strength","agility","power","knowledge","totalPieces","otherProperties","this","hasOwnProperty","pieces","getValuesDependingOnPieces","bind","getOtherPropertiesValuesDependingOnPieces","getOtherPropertiesValuesDependingOnPiecesAsArray","getValueModifier","currentPieces","valueModifier","Math","floor","map","x","valueDependingOnPieces","i18n","t","abs","itemSets","ConnectedItemTooltip","rarity","color","props","item","type","style","nameColor","key","psychoLvl","negativeStats","setColor","equippedSet","set","find","otherSetProperties","property","className","src","image","alt","randomStats","class","weaponType","damageType","reqLvl","reqStr","reqAgi","reqPow","reqKno","damage","calculateTotalDamage","enhancements","calculateTotalStat","undefined","cutRes","bluntRes","pierceRes","fireRes","energyRes","frostRes","curseRes","React","Component","ItemLine","withTranslation","ConnectedItemsTable","applyItemFilters","state","searchString","listToShow","sort","filters","rare","psychoRare","epic","barbarian","knight","sheed","druid","firemage","archer","voodoo","armor","helmet","neck","gloves","cape","weapon","shield","pants","belt","ring","boots","items","itemsToFilter","forEach","filterType","filter","a","b","language","toLowerCase","includes","raritySelectCheckboxes","onClick","setState","prevState","id","onChange","newState","ReactGA","event","category","action","label","htmlFor","checked","attributeSelectCheckboxes","attribute","classSelectCheckboxes","filtersResetButton","sortChoice","value","currentTarget","equipmentSelectCheckboxes","equipmentType","placeholder","itemsDatabase","ItemsTable","ConnectedItemsDisplay","Helmet","content","rel","href"],"mappings":"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","file":"static/js/7.d639e9d9.chunk.js","sourcesContent":["//i18l\r\nimport i18n from \"i18next\";\r\n\r\nexport class ItemSet {\r\n  readonly name: string;\r\n  readonly hp: number;\r\n  readonly mana: number;\r\n  readonly endurance: number;\r\n  readonly strength: number;\r\n  readonly agility: number;\r\n  readonly power: number;\r\n  readonly knowledge: number;\r\n  readonly totalPieces: number;\r\n  readonly otherProperties: [string, number][];\r\n  constructor(setProperties: ItemSetProperties) {\r\n    this.name = setProperties.hasOwnProperty(\"name\") ? setProperties.name! : \"\";\r\n    this.hp = setProperties.hasOwnProperty(\"hp\") ? setProperties.hp! : 0;\r\n    this.mana = setProperties.hasOwnProperty(\"mana\") ? setProperties.mana! : 0;\r\n    this.endurance = setProperties.hasOwnProperty(\"endurance\")\r\n      ? setProperties.endurance!\r\n      : 0;\r\n    this.strength = setProperties.hasOwnProperty(\"strength\")\r\n      ? setProperties.strength!\r\n      : 0;\r\n    this.agility = setProperties.hasOwnProperty(\"agility\")\r\n      ? setProperties.agility!\r\n      : 0;\r\n    this.power = setProperties.hasOwnProperty(\"power\")\r\n      ? setProperties.power!\r\n      : 0;\r\n    this.knowledge = setProperties.hasOwnProperty(\"knowledge\")\r\n      ? setProperties.knowledge!\r\n      : 0;\r\n    this.totalPieces = setProperties.hasOwnProperty(\"pieces\")\r\n      ? setProperties.pieces!\r\n      : 3;\r\n    this.otherProperties = setProperties.hasOwnProperty(\"otherProperties\")\r\n      ? setProperties.otherProperties!\r\n      : [];\r\n    this.getValuesDependingOnPieces = this.getValuesDependingOnPieces.bind(this);\r\n    this.getOtherPropertiesValuesDependingOnPieces = this.getOtherPropertiesValuesDependingOnPieces.bind(this);\r\n    this.getOtherPropertiesValuesDependingOnPiecesAsArray = this.getOtherPropertiesValuesDependingOnPiecesAsArray.bind(this);\r\n    this.getValueModifier = this.getValueModifier.bind(this);\r\n  }\r\n  //Method returning the values the set provides depending on the number of pieces worn\r\n  public getValuesDependingOnPieces(currentPieces: number): SetPropertiesDependingOnPieces {\r\n    //getting the modifier of the value each stat provides\r\n    let valueModifier: number = this.getValueModifier(currentPieces);\r\n    //calculating values\r\n    let propertyValues: SetPropertiesDependingOnPieces = {\r\n      hp: Math.floor(this.hp * valueModifier),\r\n      mana: Math.floor(this.mana * valueModifier),\r\n      endurance: Math.floor(this.endurance * valueModifier),\r\n      strength: Math.floor(this.strength * valueModifier),\r\n      agility: Math.floor(this.agility * valueModifier),\r\n      knowledge: Math.floor(this.knowledge * valueModifier),\r\n      power: Math.floor(this.power * valueModifier),\r\n      otherProperties: this.getOtherPropertiesValuesDependingOnPieces(valueModifier)\r\n    }\r\n    return propertyValues\r\n  }\r\n  private getValueModifier(currentPieces: number): number {\r\n    let valueModifier: number = 0;\r\n    switch (currentPieces / this.totalPieces) {\r\n      case 1:\r\n        valueModifier = 1;\r\n        break;\r\n      case 0.8:\r\n        valueModifier = 0.6;\r\n        break;\r\n      case 0.75:\r\n        valueModifier = 0.5;\r\n        break;\r\n      case 2 / 3:\r\n        valueModifier = 0.4;\r\n        break;\r\n      case 0.6:\r\n        valueModifier = 0.4;\r\n        break;\r\n      case 0.5:\r\n        valueModifier = 0.25;\r\n        break;\r\n      case 0.4:\r\n        valueModifier = 0.2;\r\n        break;\r\n      default:\r\n        valueModifier = 0;\r\n        break;\r\n    }\r\n    return valueModifier\r\n  }\r\n  //Method returning the value of the otherProperties property in an easy to show form\r\n  private getOtherPropertiesValuesDependingOnPieces(valueModifier: number): string[] {\r\n    let propertyValues = this.otherProperties.map((x) => {\r\n      let valueDependingOnPieces: number = 0;\r\n      if (x[1] !== 1) {\r\n        valueDependingOnPieces = Math.floor(x[1] * valueModifier * 100) / 100;\r\n        let otherPropertyAsString = x[1] < 0 ? i18n.t(x[0]) + \": -\" + Math.abs(valueDependingOnPieces) + \"% (\" + x[1] + \"%)\" : i18n.t(x[0]) + \": +\" + valueDependingOnPieces + \"% (\" + x[1] + \"%)\"\r\n        return otherPropertyAsString;\r\n      } else {\r\n        valueDependingOnPieces = valueModifier === 1 ? 1 : 0;\r\n        return i18n.t(x[0]) + \": +\" + valueDependingOnPieces + \" (\" + x[1] + \")\";\r\n      }\r\n    });\r\n    return propertyValues;\r\n  }\r\n  public getOtherPropertiesValuesDependingOnPiecesAsArray(currentPieces: number): [string, number][] {\r\n    let valueModifier: number = this.getValueModifier(currentPieces);\r\n    let otherPropertyValues: [string, number][] = this.otherProperties.map(x => {\r\n      let valueDependingOnPieces: number = 0;\r\n      if (x[1] !== 1) {\r\n        valueDependingOnPieces = Math.floor(x[1] * valueModifier * 100) / 100;\r\n        return [i18n.t(x[0]), valueDependingOnPieces];\r\n      } else {\r\n        valueDependingOnPieces = valueModifier === 1 ? 1 : 0;\r\n        return [i18n.t(x[0]), valueDependingOnPieces]\r\n      }\r\n    });\r\n    return otherPropertyValues\r\n  }\r\n}\r\n\r\nexport interface ItemSetProperties {\r\n  name: string;\r\n  hp?: number;\r\n  mana?: number;\r\n  endurance?: number;\r\n  strength?: number;\r\n  agility?: number;\r\n  power?: number;\r\n  knowledge?: number;\r\n  pieces: number;\r\n  otherProperties: [string, number][];\r\n}\r\n\r\nexport interface SetPropertiesDependingOnPieces {\r\n  hp: number;\r\n  mana: number;\r\n  endurance: number;\r\n  strength: number;\r\n  agility: number;\r\n  power: number;\r\n  knowledge: number;\r\n  otherProperties: string[]\r\n}\r\n","import { ItemSet } from \"./models/item-set.model\"\r\nimport { ItemSetProperties } from \"./models/item-set.model\"\r\n\r\nconst itemSetData: ItemSetProperties[] = [{\r\n  name: \"Resztki Reffa\",\r\n  pieces: 3,\r\n  strength: 8,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Rozproszenie Holma\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Okowy Snu\",\r\n  pieces: 3,\r\n  hp: 50,\r\n  otherProperties: [\r\n    [\"Szansa na trafienie krytyczne\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Światła Tellabagu\",\r\n  pieces: 3,\r\n  hp: 100,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń fizycznych\", 10],\r\n    [\"Modyfikator obrażeń magicznych\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Przebranie Ludobójcy\",\r\n  pieces: 4,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 10],\r\n    [\"Szansa na podwójny atak\", 6]\r\n  ]\r\n},\r\n{\r\n  name: \"Zbroja Pinari\",\r\n  pieces: 3,\r\n  hp: 40,\r\n  otherProperties: [\r\n    [\"Odporność na korzenie\", 35],\r\n    [\"Szansa na podwójny atak\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Gniew Żywiołów\",\r\n  pieces: 4,\r\n  mana: 160,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Modyfikator obrażeń magicznych\", 15]\r\n  ]\r\n},\r\n{\r\n  name: \"Żądło Bogów\",\r\n  pieces: 4,\r\n  agility: 16,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Szansa na trafienie krytyczne\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Ryk Północy\",\r\n  pieces: 5,\r\n  agility: 16,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń fizycznych\", 10],\r\n    [\"Szansa na trafienie krytyczne\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Sztorm Haugura\",\r\n  pieces: 4,\r\n  hp: 160,\r\n  otherProperties: [\r\n    [\"Zużycie kondycji\", -8],\r\n    [\"Szansa na trafienie krytyczne\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Ostrze Równowagi\",\r\n  pieces: 4,\r\n  hp: 160,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Szansa na podwójny atak\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Ukazanie Killarasuna\",\r\n  pieces: 4,\r\n  hp: 190,\r\n  otherProperties: [\r\n    [\"Zużycie many\", -10],\r\n    [\"Szansa na podwójny atak\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Szaty Płynnego Ognia\",\r\n  pieces: 4,\r\n  mana: 160,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń magicznych\", 10],\r\n    [\"Szansa na podwójny atak\", 5]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Vorlingów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Obrona wręcz\", 10],\r\n    [\"Odporność na trafienie krytyczne\", 9],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Dusza Świata\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Modyfikator trafień fizycznych\", 15],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Oko Bogów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Modyfikator trafień dystansowych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Nieśmiertelności\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Modyfikator obrażeń fizycznych\", 15],\r\n    [\"Modyfikator trafień fizycznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Żywiołów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Regeneracja many\", 2],\r\n    [\"Modyfikator obrażeń magicznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pocałunek Miliona Gwiazd\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Modyfikator trafień dystansowych\", 15],\r\n    [\"Modyfikator obrażeń magicznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Zasłona Śmierci\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Modyfikator trafień magicznych\", 15],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n}]\r\n\r\nexport const itemSets = itemSetData.map(x => new ItemSet(x))\r\n","//React\r\nimport React from \"react\";\r\n\r\n//Models\r\nimport { Item } from \"../../../../data/models/item.model\";\r\n\r\n//Data\r\nimport { itemSets } from \"../../../../data/item-sets\";\r\n\r\n//i18l\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass ConnectedItemTooltip extends React.Component<PropTypes> {\r\n  nameColor(rarity: string): { color: string } {\r\n    let color = {\r\n      color: \"#0161E7\",\r\n    };\r\n    if (rarity === \"Psychorare\") {\r\n      color.color = \"#37b5d4\";\r\n    } else if (rarity === \"Set\") {\r\n      color.color = \"#3ec211\";\r\n    } else if (rarity === \"Epik\") {\r\n      color.color = \"#b5a319\";\r\n    }\r\n    return color;\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    let otherProperties = this.props.item\r\n      ? this.props.item.type === \"guild\"\r\n        ? this.props.item.otherProperties.map((x) => (\r\n            <p style={this.nameColor(\"Psychorare\")} key={x[0]}>\r\n              {t(x[0])}: {x[1] > 0 ? \"+\" : null}\r\n              {x[1]}%\r\n            </p>\r\n          ))\r\n        : this.props.item.otherProperties.map((x) => {\r\n            if (x[0] === \"Dodatkowe PA\") {\r\n              return (\r\n                <p\r\n                  style={\r\n                    this.props.item.psychoLvl\r\n                      ? this.nameColor(\"Psychorare\")\r\n                      : { color: \"gray\" }\r\n                  }\r\n                  key={x[0]}\r\n                >\r\n                  {t(x[0])}: {x[1]}\r\n                </p>\r\n              );\r\n            } else {\r\n              return (\r\n                <p\r\n                  style={\r\n                    this.props.item.psychoLvl\r\n                      ? this.nameColor(\"Psychorare\")\r\n                      : { color: \"gray\" }\r\n                  }\r\n                  key={x[0]}\r\n                >\r\n                  {t(x[0])}: {x[1] > 0 ? \"+\" : null}\r\n                  {x[1] + x[2] * (this.props.item.psychoLvl - 1)}% (\r\n                  {x[2] > 0 ? \"+\" : null}\r\n                  {x[2]}% {t(\"co poziom\")})\r\n                </p>\r\n              );\r\n            }\r\n          })\r\n      : null;\r\n    let negativeStats = {\r\n      color: \"#961291\",\r\n    };\r\n    //If it's a set item\r\n    let setColor = {\r\n      color: \"#3ec211\",\r\n    };\r\n    let equippedSet =\r\n      this.props.item && this.props.item.set\r\n        ? itemSets.find((x) => x.name === this.props.item.set)\r\n        : null;\r\n    let setProperties =\r\n      equippedSet && this.props.item.set\r\n        ? equippedSet.getValuesDependingOnPieces(equippedSet.totalPieces)\r\n        : null;\r\n    let otherSetProperties =\r\n      equippedSet && this.props.item.set\r\n        ? equippedSet\r\n            .getOtherPropertiesValuesDependingOnPiecesAsArray(\r\n              equippedSet.totalPieces\r\n            )\r\n            .map((property) => (\r\n              <p key={property[0]} style={setColor}>\r\n                {property[0]}: {property[1]}\r\n                {property[0] !== \"Dodatkowe PA\" &&\r\n                property[0] !== \"Oszukać przeznaczenie\"\r\n                  ? \"%\"\r\n                  : null}\r\n              </p>\r\n            ))\r\n        : null;\r\n    return (\r\n      <tr>\r\n        <td className=\"image\">\r\n          <img\r\n            src={`images/items/${this.props.item.image}`}\r\n            alt={this.props.item.name}\r\n          />\r\n        </td>\r\n        <td className=\"name\">\r\n          <p style={this.nameColor(this.props.item.rarity)}>\r\n            {t(this.props.item.name)}\r\n          </p>\r\n        </td>\r\n        <td className=\"type\">\r\n          {this.props.item.set && equippedSet ? (\r\n            <p className=\"itemSet\" style={setColor}>\r\n              {t(\"Zestaw\")}: {t(this.props.item.set)}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.randomStats ? (\r\n            <p className=\"starItem\">{t(\"Przedmiot gwiazdkowy\")}</p>\r\n          ) : null}\r\n          {this.props.item.class ? (\r\n            <p className=\"itemClass\">\r\n              {t(\"req-class\")}: {t(this.props.item.class)}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.weaponType ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"Typ broni\")}: {t(this.props.item.weaponType)}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.damageType ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"Typ obrażeń\")}: {t(this.props.item.damageType)}\r\n            </p>\r\n          ) : null}\r\n        </td>\r\n        <td className=\"requirements\">\r\n          {this.props.item.reqLvl ? (\r\n            <p className=\"itemReq\">\r\n              {t(\"req-level\")}: {this.props.item.reqLvl}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.reqStr ? (\r\n            <p className=\"itemReq\">\r\n              {t(\"req-strength\")}: {this.props.item.reqStr}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.reqAgi ? (\r\n            <p className=\"itemReq\">\r\n              {t(\"req-agility\")}: {this.props.item.reqAgi}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.reqPow ? (\r\n            <p className=\"itemReq\">\r\n              {t(\"req-power\")}: {this.props.item.reqPow}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.reqKno ? (\r\n            <p className=\"itemReq\">\r\n              {t(\"req-knowledge\")}: {this.props.item.reqKno}\r\n            </p>\r\n          ) : null}\r\n        </td>\r\n        <td className=\"attributes\">\r\n          {this.props.item.damage ? (\r\n            <p className=\"damage\">\r\n              {t(\"Obrażenia\")}: {this.props.item.calculateTotalDamage(0)}\r\n              {this.props.item.enhancements.damage ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.damage > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.damage})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"strength\") ||\r\n          this.props.item.strength ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"strength\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"strength\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"strength\") >= 0 ? \"+\" : null}\r\n              {this.props.item.calculateTotalStat(\"strength\")}\r\n              {this.props.item.enhancements.strength ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.strength > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.strength})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"agility\") ||\r\n          this.props.item.agility ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"agility\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"agility\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"agility\") >= 0 ? \"+\" : null}\r\n              {this.props.item.calculateTotalStat(\"agility\")}\r\n              {this.props.item.enhancements.agility ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.agility > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.agility})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"power\") ||\r\n          this.props.item.power ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"power\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"power\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"power\") >= 0 ? \"+\" : null}\r\n              {this.props.item.calculateTotalStat(\"power\")}\r\n              {this.props.item.enhancements.power ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.power > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.power})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"knowledge\") ||\r\n          this.props.item.knowledge ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"knowledge\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"knowledge\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"knowledge\") >= 0\r\n                ? \"+\"\r\n                : null}\r\n              {this.props.item.calculateTotalStat(\"knowledge\")}\r\n              {this.props.item.enhancements.knowledge ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.knowledge > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.knowledge})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"hp\") || this.props.item.hp ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"hp\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"hp\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"hp\") >= 0 ? \"+\" : null}\r\n              {this.props.item.calculateTotalStat(\"hp\")}\r\n              {this.props.item.enhancements.hp ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.hp > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.hp})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"mana\") ||\r\n          this.props.item.mana ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"mana\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"mana\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"mana\") >= 0 ? \"+\" : null}\r\n              {this.props.item.calculateTotalStat(\"mana\")}\r\n              {this.props.item.enhancements.mana ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.mana > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.mana})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.calculateTotalStat(\"endurance\") ||\r\n          this.props.item.endurance ? (\r\n            <p\r\n              className=\"itemProperty\"\r\n              style={\r\n                this.props.item.calculateTotalStat(\"endurance\") >= 0\r\n                  ? undefined\r\n                  : negativeStats\r\n              }\r\n            >\r\n              {t(\"endurance\")}:{\" \"}\r\n              {this.props.item.calculateTotalStat(\"endurance\") >= 0\r\n                ? \"+\"\r\n                : null}\r\n              {this.props.item.calculateTotalStat(\"endurance\")}\r\n              {this.props.item.enhancements.endurance ? (\r\n                <span style={{ color: \"orange\" }}>\r\n                  {\" \"}\r\n                  ({this.props.item.enhancements.endurance > 0 ? \"+\" : null}\r\n                  {this.props.item.enhancements.endurance})\r\n                </span>\r\n              ) : null}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.cutRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"cutRes\")}: +{this.props.item.cutRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.bluntRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"bluntRes\")}: +{this.props.item.bluntRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.pierceRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"pierceRes\")}: +{this.props.item.pierceRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.fireRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"fireRes\")}: +{this.props.item.fireRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.energyRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"energyRes\")}: +{this.props.item.energyRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.frostRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"frostRes\")}: +{this.props.item.frostRes}\r\n            </p>\r\n          ) : null}\r\n          {this.props.item.curseRes ? (\r\n            <p className=\"itemProperty\">\r\n              {t(\"curseRes\")}: +{this.props.item.curseRes}\r\n            </p>\r\n          ) : null}\r\n        </td>\r\n        <td className=\"psycho\">\r\n          {otherProperties}\r\n          {/* If it's a set item */}\r\n          {equippedSet ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"Efekty zestawu\")}:\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.strength && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"strength\")}: +{setProperties.strength}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.agility && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"agility\")}: +{setProperties.agility}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.power && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"power\")}: +{setProperties.power}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.knowledge && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"knowledge\")}: +{setProperties.knowledge}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.hp && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"hp\")}: +{setProperties.hp}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.endurance && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"endurance\")}: +{setProperties.endurance}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.mana && setProperties ? (\r\n            <p className=\"itemProperty\" style={setColor}>\r\n              {t(\"mana\")}: +{setProperties.mana}\r\n            </p>\r\n          ) : null}\r\n          {equippedSet && equippedSet.otherProperties\r\n            ? otherSetProperties\r\n            : null}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ItemLine = withTranslation()(ConnectedItemTooltip);\r\n\r\ninterface PropTypes {\r\n  item: Item;\r\n  t(string: string, interpolation?: { [key: string]: string }): string;\r\n}\r\n","//React\r\nimport React from \"react\";\r\nimport ReactGA from \"react-ga\";\r\n\r\n//Components\r\nimport { ItemLine } from \"./item-line/ItemLine\";\r\n\r\n//Shared functionality\r\nimport i18n from \"i18next\";\r\n\r\n//Types\r\nimport { Item } from \"../../../data/models/item.model\";\r\nimport itemsDatabase from \"../../../data/items\";\r\n\r\n//i18l\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass ConnectedItemsTable extends React.Component<PropTypes, StateTypes> {\r\n  constructor(props: PropTypes) {\r\n    super(props);\r\n    this.applyItemFilters = this.applyItemFilters.bind(this);\r\n    this.state = {\r\n      searchString: \"\",\r\n      listToShow: \"\",\r\n      sort: \"\",\r\n      filters: {\r\n        rare: false,\r\n        psychoRare: false,\r\n        set: false,\r\n        epic: false,\r\n        barbarian: false,\r\n        knight: false,\r\n        sheed: false,\r\n        druid: false,\r\n        firemage: false,\r\n        archer: false,\r\n        voodoo: false,\r\n        strength: 0,\r\n        agility: 0,\r\n        power: 0,\r\n        knowledge: 0,\r\n        hp: 0,\r\n        mana: 0,\r\n        endurance: 0,\r\n        fireRes: 0,\r\n        energyRes: 0,\r\n        frostRes: 0,\r\n        curseRes: 0,\r\n        armor: false,\r\n        helmet: false,\r\n        neck: false,\r\n        gloves: false,\r\n        cape: false,\r\n        weapon: false,\r\n        shield: false,\r\n        pants: false,\r\n        belt: false,\r\n        ring: false,\r\n        boots: false\r\n      },\r\n    };\r\n  }\r\n  applyItemFilters(items: Item[]): Item[] {\r\n    let itemsToFilter = [...items];\r\n    const attributes = [\r\n      \"strength\",\r\n      \"agility\",\r\n      \"power\",\r\n      \"knowledge\",\r\n      \"hp\",\r\n      \"mana\",\r\n      \"endurance\",\r\n      \"fireRes\",\r\n      \"energyRes\",\r\n      \"frostRes\",\r\n      \"curseRes\",\r\n    ];\r\n    attributes.forEach((filterType) => {\r\n      itemsToFilter = this.state.filters[filterType]\r\n        ? itemsToFilter.filter((item) => item[filterType as keyof Item]! > 0)\r\n        : itemsToFilter;\r\n    });\r\n    if (\r\n      this.state.filters.set ||\r\n      this.state.filters.psychoRare ||\r\n      this.state.filters.rare ||\r\n      this.state.filters.epic\r\n    ) {\r\n      itemsToFilter = itemsToFilter.filter((item) => {\r\n        if (this.state.filters.set && item.set) {\r\n          return true;\r\n        } else if (\r\n          this.state.filters.psychoRare &&\r\n          item.rarity === \"Psychorare\"\r\n        ) {\r\n          return true;\r\n        } else if (this.state.filters.rare && item.rarity === \"Rzadki\") {\r\n          return true;\r\n        } else if (this.state.filters.epic && item.rarity === \"Epik\") {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    if (\r\n      this.state.filters.barbarian ||\r\n      this.state.filters.knight ||\r\n      this.state.filters.sheed ||\r\n      this.state.filters.druid ||\r\n      this.state.filters.firemage ||\r\n      this.state.filters.archer ||\r\n      this.state.filters.voodoo\r\n    ) {\r\n      itemsToFilter = itemsToFilter.filter((item) => {\r\n        if (this.state.filters.barbarian && item.class === \"barbarian\") {\r\n          return true;\r\n        } else if (this.state.filters.knight && item.class === \"knight\") {\r\n          return true;\r\n        } else if (this.state.filters.sheed && item.class === \"sheed\") {\r\n          return true;\r\n        } else if (this.state.filters.druid && item.class === \"druid\") {\r\n          return true;\r\n        } else if (this.state.filters.firemage && item.class === \"firemage\") {\r\n          return true;\r\n        } else if (this.state.filters.archer && item.class === \"archer\") {\r\n          return true;\r\n        } else if (this.state.filters.voodoo && item.class === \"voodoo\") {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    if (\r\n      this.state.filters.armor ||\r\n      this.state.filters.helmet ||\r\n      this.state.filters.neck ||\r\n      this.state.filters.gloves ||\r\n      this.state.filters.cape ||\r\n      this.state.filters.weapon ||\r\n      this.state.filters.shield ||\r\n      this.state.filters.pants ||\r\n      this.state.filters.belt ||\r\n      this.state.filters.ring ||\r\n      this.state.filters.boots\r\n    ) {\r\n      itemsToFilter = itemsToFilter.filter((item) => {\r\n        if (this.state.filters.armor && item.type === \"armor\") {\r\n          return true;\r\n        } else if (this.state.filters.helmet && item.type === \"helmet\") {\r\n          return true;\r\n        } else if (this.state.filters.neck && item.type === \"neck\") {\r\n          return true;\r\n        } else if (this.state.filters.gloves && item.type === \"gloves\") {\r\n          return true;\r\n        } else if (this.state.filters.cape && item.type === \"cape\") {\r\n          return true;\r\n        } else if (this.state.filters.weapon && item.type === \"weapon\") {\r\n          return true;\r\n        } else if (this.state.filters.shield && item.type === \"shield\") {\r\n          return true;\r\n        } else if (this.state.filters.pants && item.type === \"pants\") {\r\n          return true;\r\n        } else if (this.state.filters.belt && item.type === \"belt\") {\r\n          return true;\r\n        } else if (this.state.filters.ring && item.type === \"ring\") {\r\n          return true;\r\n        } else if (this.state.filters.boots && item.type === \"boots\") {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n    itemsToFilter = this.state.sort\r\n      ? itemsToFilter.sort((a, b) => b[this.state.sort] - a[this.state.sort])\r\n      : itemsToFilter;\r\n    return itemsToFilter.filter((x) =>\r\n      this.props.i18n.language === \"pl\"\r\n        ? x.name.toLowerCase().includes(this.state.searchString.toLowerCase())\r\n        : this.props\r\n            .t(x.name)\r\n            .toLowerCase()\r\n            .includes(this.state.searchString.toLowerCase())\r\n    );\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    const rarities = [\"rare\", \"psychoRare\", \"set\", \"epic\"];\r\n    const raritySelectCheckboxes = (\r\n      <form>\r\n        <div className=\"multiselect\">\r\n          <div\r\n            className=\"selectBox\"\r\n            onClick={() =>\r\n              this.setState((prevState) => {\r\n                return {\r\n                  listToShow: prevState.listToShow === \"rarity\" ? \"\" : \"rarity\",\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <select>\r\n              <option>{t(\"Rzadkość\")}</option>\r\n            </select>\r\n            <div className=\"overSelect\"></div>\r\n          </div>\r\n          {this.state.listToShow === \"rarity\" ? (\r\n            <div id=\"checkboxes\">\r\n              {rarities.map((rarity) => (\r\n                <div\r\n                  key={rarity}\r\n                  onChange={() =>\r\n                    this.setState((prevState) => {\r\n                      let newState = { ...prevState };\r\n                      ReactGA.event({\r\n                        category: \"Items Display\",\r\n                        action: \"Activate Filter\",\r\n                        label: rarity,\r\n                      });\r\n\r\n                      newState.filters[rarity] = !prevState.filters[rarity];\r\n                      return newState;\r\n                    })\r\n                  }\r\n                >\r\n                  <label htmlFor={rarity}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={rarity}\r\n                      checked={!!this.state.filters[rarity]}\r\n                      onChange={() => {}}\r\n                    />\r\n                    {t(rarity)}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n    const attributes = [\r\n      \"strength\",\r\n      \"agility\",\r\n      \"power\",\r\n      \"knowledge\",\r\n      \"hp\",\r\n      \"mana\",\r\n      \"endurance\",\r\n      \"fireRes\",\r\n      \"energyRes\",\r\n      \"frostRes\",\r\n      \"curseRes\",\r\n    ];\r\n    const attributeSelectCheckboxes = (\r\n      <form>\r\n        <div className=\"multiselect\">\r\n          <div\r\n            className=\"selectBox\"\r\n            onClick={() =>\r\n              this.setState((prevState) => {\r\n                return {\r\n                  listToShow:\r\n                    prevState.listToShow === \"attributes\" ? \"\" : \"attributes\",\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <select>\r\n              <option>{t(\"Atrybut\")}</option>\r\n            </select>\r\n            <div className=\"overSelect\"></div>\r\n          </div>\r\n          {this.state.listToShow === \"attributes\" ? (\r\n            <div id=\"checkboxes\">\r\n              {attributes.map((attribute) => (\r\n                <div\r\n                  key={attribute}\r\n                  onChange={() =>\r\n                    this.setState((prevState) => {\r\n                      let newState = { ...prevState };\r\n                      ReactGA.event({\r\n                        category: \"Items Display\",\r\n                        action: \"Activate Filter\",\r\n                        label: attribute,\r\n                      });\r\n\r\n                      newState.filters[attribute] = !prevState.filters[\r\n                        attribute\r\n                      ];\r\n                      return newState;\r\n                    })\r\n                  }\r\n                >\r\n                  <label htmlFor={attribute}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={attribute}\r\n                      checked={!!this.state.filters[attribute]}\r\n                      onChange={() => {}}\r\n                    />\r\n                    {t(attribute)}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n    const classes = [\r\n      \"barbarian\",\r\n      \"knight\",\r\n      \"sheed\",\r\n      \"druid\",\r\n      \"firemage\",\r\n      \"archer\",\r\n      \"voodoo\",\r\n    ];\r\n    const classSelectCheckboxes = (\r\n      <form>\r\n        <div className=\"multiselect\">\r\n          <div\r\n            className=\"selectBox\"\r\n            onClick={() =>\r\n              this.setState((prevState) => {\r\n                return {\r\n                  listToShow: prevState.listToShow === \"class\" ? \"\" : \"class\",\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <select>\r\n              <option>{t(\"Klasa\")}</option>\r\n            </select>\r\n            <div className=\"overSelect\"></div>\r\n          </div>\r\n          {this.state.listToShow === \"class\" ? (\r\n            <div id=\"checkboxes\">\r\n              {classes.map((className) => (\r\n                <div\r\n                  key={className}\r\n                  onChange={() =>\r\n                    this.setState((prevState) => {\r\n                      let newState = { ...prevState };\r\n                      ReactGA.event({\r\n                        category: \"Items Display\",\r\n                        action: \"Activate Filter\",\r\n                        label: className,\r\n                      });\r\n\r\n                      newState.filters[className] = !prevState.filters[\r\n                        className\r\n                      ];\r\n                      return newState;\r\n                    })\r\n                  }\r\n                >\r\n                  <label htmlFor={className}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={className}\r\n                      checked={!!this.state.filters[className]}\r\n                      onChange={() => {}}\r\n                    />\r\n                    {t(className)}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n    let filtersResetButton = (\r\n      <button\r\n        className=\"resetFilters\"\r\n        onClick={() =>\r\n          this.setState({\r\n            sort: \"\",\r\n            filters: {\r\n              rare: false,\r\n              psychoRare: false,\r\n              set: false,\r\n              epic: false,\r\n              barbarian: false,\r\n              knight: false,\r\n              sheed: false,\r\n              druid: false,\r\n              firemage: false,\r\n              archer: false,\r\n              voodoo: false,\r\n              strength: 0,\r\n              agility: 0,\r\n              power: 0,\r\n              knowledge: 0,\r\n              hp: 0,\r\n              mana: 0,\r\n              endurance: 0,\r\n              fireRes: 0,\r\n              energyRes: 0,\r\n              frostRes: 0,\r\n              curseRes: 0,\r\n              armor: false,\r\n              helmet: false,\r\n              neck: false,\r\n              gloves: false,\r\n              cape: false,\r\n              weapon: false,\r\n              shield: false,\r\n              pants: false,\r\n              belt: false,\r\n              ring: false,\r\n              boots: false\r\n            },\r\n          })\r\n        }\r\n      >\r\n        {t(\"Resetuj\")}\r\n      </button>\r\n    );\r\n    const sortTypes = [\r\n      \"reqLvl\",\r\n      \"strength\",\r\n      \"agility\",\r\n      \"power\",\r\n      \"knowledge\",\r\n      \"hp\",\r\n      \"mana\",\r\n      \"endurance\",\r\n      \"fireRes\",\r\n      \"energyRes\",\r\n      \"frostRes\",\r\n      \"curseRes\",\r\n    ];\r\n    const sortChoice = (\r\n      <form>\r\n        <div className=\"multiselect\">\r\n          <div\r\n            className=\"selectBox\"\r\n            onClick={() =>\r\n              this.setState((prevState) => {\r\n                return {\r\n                  listToShow: prevState.listToShow === \"sort\" ? \"\" : \"sort\",\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <select>\r\n              <option>{t(\"Sortowanie\")}</option>\r\n            </select>\r\n            <div className=\"overSelect\"></div>\r\n          </div>\r\n          {this.state.listToShow === \"sort\" ? (\r\n            <div id=\"checkboxes\">\r\n              {sortTypes.map((sort) => (\r\n                <div key={sort}>\r\n                  <label htmlFor={sort}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      value={sort}\r\n                      name=\"sort\"\r\n                      id={sort}\r\n                      checked={this.state.sort === sort}\r\n                      onChange={(event) =>\r\n                        this.setState({ sort: event.currentTarget.value })\r\n                      }\r\n                    />\r\n                    {t(sort)}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n    const equipmentTypes = [\r\n      \"armor\",\r\n      \"helmet\",\r\n      \"neck\",\r\n      \"gloves\",\r\n      \"cape\",\r\n      \"weapon\",\r\n      \"shield\",\r\n      \"pants\",\r\n      \"belt\",\r\n      \"ring\",\r\n      \"boots\",\r\n    ];\r\n    const equipmentSelectCheckboxes = (\r\n      <form>\r\n        <div className=\"multiselect\">\r\n          <div\r\n            className=\"selectBox\"\r\n            onClick={() =>\r\n              this.setState((prevState) => {\r\n                return {\r\n                  listToShow:\r\n                    prevState.listToShow === \"equipment\" ? \"\" : \"equipment\",\r\n                };\r\n              })\r\n            }\r\n          >\r\n            <select>\r\n              <option>{t(\"Rodzaj\")}</option>\r\n            </select>\r\n            <div className=\"overSelect\"></div>\r\n          </div>\r\n          {this.state.listToShow === \"equipment\" ? (\r\n            <div id=\"checkboxes\">\r\n              {equipmentTypes.map((equipmentType) => (\r\n                <div\r\n                  key={equipmentType}\r\n                  onChange={() =>\r\n                    this.setState((prevState) => {\r\n                      let newState = { ...prevState };\r\n                      ReactGA.event({\r\n                        category: \"Items Display\",\r\n                        action: \"Activate Filter\",\r\n                        label: equipmentType,\r\n                      });\r\n                      newState.filters[equipmentType] = !prevState.filters[\r\n                        equipmentType\r\n                      ];\r\n                      return newState;\r\n                    })\r\n                  }\r\n                >\r\n                  <label htmlFor={equipmentType}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={equipmentType}\r\n                      checked={!!this.state.filters[equipmentType]}\r\n                      onChange={() => {}}\r\n                    />\r\n                    {t(equipmentType)}\r\n                  </label>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </form>\r\n    );\r\n    return (\r\n      <div className=\"itemsTable\">\r\n        <div className=\"filters\">\r\n          <div className=\"search\">\r\n            <img src=\"./images/magnifying-glass.svg\" alt=\"search\" />\r\n            <input\r\n              onChange={(event) =>\r\n                this.setState({\r\n                  searchString: event.currentTarget.value,\r\n                })\r\n              }\r\n              placeholder={t(\"Wpisz nazwę\")}\r\n              value={this.state.searchString}\r\n            />\r\n          </div>\r\n          <div className=\"filter\">\r\n            <img src=\"./images/funnel.svg\" alt=\"filter\" />\r\n            <div className=\"filtersList\">\r\n              {equipmentSelectCheckboxes}\r\n              {raritySelectCheckboxes}\r\n              {attributeSelectCheckboxes}\r\n              {classSelectCheckboxes}\r\n            </div>\r\n          </div>\r\n          <div className=\"filter sort\">\r\n            <img src=\"./images/sort.svg\" alt=\"filter\" />\r\n            <div className=\"filtersList\">{sortChoice}</div>\r\n          </div>\r\n          {filtersResetButton}\r\n        </div>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td className=\"image\">{t(\"Obrazek\")}</td>\r\n              <td className=\"name\">{t(\"Nazwa\")}</td>\r\n              <td className=\"type\">{t(\"Rodzaj\")}</td>\r\n              <td className=\"requirements\">{t(\"Wymagania\")}</td>\r\n              <td className=\"attributes\">{t(\"Statystyki\")}</td>\r\n              <td className=\"psycho\">{t(\"Psychowłaściwości\")}</td>\r\n            </tr>\r\n            {this.applyItemFilters(itemsDatabase).map((item) => (\r\n              <ItemLine key={item.name} item={item} />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ItemsTable = withTranslation()(ConnectedItemsTable);\r\n\r\ninterface PropTypes {\r\n  t(string: string): string;\r\n  i18n: typeof i18n;\r\n}\r\n\r\ninterface StateTypes {\r\n  searchString: string;\r\n  listToShow: string;\r\n  sort: string;\r\n  filters: {\r\n    barbarian: boolean;\r\n    knight: boolean;\r\n    sheed: boolean;\r\n    druid: boolean;\r\n    firemage: boolean;\r\n    archer: boolean;\r\n    voodoo: boolean;\r\n    strength: number;\r\n    agility: number;\r\n    power: number;\r\n    knowledge: number;\r\n    hp: number;\r\n    mana: number;\r\n    endurance: number;\r\n    rare: boolean;\r\n    psychoRare: boolean;\r\n    set: boolean;\r\n    epic: boolean;\r\n    fireRes: number;\r\n    energyRes: number;\r\n    frostRes: number;\r\n    curseRes: number;\r\n    armor: boolean;\r\n    helmet: boolean;\r\n    neck: boolean;\r\n    gloves: boolean;\r\n    cape: boolean;\r\n    weapon: boolean;\r\n    shield: boolean;\r\n    pants: boolean;\r\n    belt: boolean;\r\n    ring: boolean;\r\n    boots: boolean;\r\n    [index: string]: boolean | number | string;\r\n  };\r\n}\r\n","//React\r\nimport React from \"react\";\r\n\r\n\r\n//Components\r\nimport { ItemsTable } from \"./items-table/ItemsTable\";\r\n\r\n//Helmet\r\nimport { Helmet } from \"react-helmet\";\r\n\r\n//i18l\r\nimport { withTranslation } from \"react-i18next\";\r\nimport i18n from \"i18next\";\r\n\r\nclass ConnectedItemsDisplay extends React.Component<PropTypes> {\r\n  render() {\r\n    const { t } = this.props;\r\n    return (\r\n      <div className=\"calculator items\">\r\n      <div className=\"itemsDisplay\">\r\n      <Helmet>\r\n        <title>{t(\"items-display\")}</title>\r\n        <meta name=\"description\" content={t(\"meta-description-calc\")} />\r\n        <link rel=\"canonical\" href={`https://toolbox.taern.com/${i18n.language}/items`} />\r\n        <meta property=\"og:title\" content={t(\"items-display\")} />\r\n        <meta property=\"og:url\" content={`https://toolbox.taern.com/${i18n.language}/items`} />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={t(\"meta-description-calc\")}\r\n        />\r\n      </Helmet>\r\n        <div id=\"calc\">\r\n          <h1>{t(\"items-display\")}</h1>\r\n          <div className=\"intro\"><p>{t(\"items-intro\")}</p></div>\r\n        </div>\r\n        <ItemsTable />\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation()(ConnectedItemsDisplay);\r\n\r\ninterface PropTypes {\r\n  t(string: string): string;\r\n}\r\n"],"sourceRoot":""}