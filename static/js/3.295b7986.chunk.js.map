{"version":3,"sources":["data/models/item-set.model.ts","data/item-sets.ts","shared/check-which-sets-are-equipped.ts","shared/calculate-other-properties.ts","shared/calculate-stats-from-items.ts","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","components/calculator/skills-calculator/skill-line/skill-buttons/SkillButton.tsx","components/calculator/skills-calculator/skill-line/skill-tooltip/SkillTooltip.tsx","components/calculator/skills-calculator/skill-line/SkillLine.tsx","components/calculator/skills-calculator/SkillsCalculator.tsx"],"names":["ItemSet","setProperties","name","hp","mana","endurance","strength","agility","power","knowledge","totalPieces","otherProperties","this","hasOwnProperty","pieces","getValuesDependingOnPieces","bind","getOtherPropertiesValuesDependingOnPieces","getOtherPropertiesValuesDependingOnPiecesAsArray","getValueModifier","currentPieces","valueModifier","Math","floor","map","x","valueDependingOnPieces","i18n","t","abs","itemSets","checkWhichSetsAreEquipped","equipment","Object","keys","reduce","total","set","calculateOtherProperties","propertiesOfSets","equippedSets","setsProperties","setName","find","forEach","property","checkPropertiesOfSets","propertiesOfEquippedItems","item","rarity","type","psychoLvl","checkOtherPropertiesOfItems","calculateStatsFromItems","level","equippedItems","statsFromSets","setsEquipped","length","key","eqippedSetProperties","calculateStateFromSets","calculateTotalStat","damage","calculateTotalDamage","weapon","special","fireRes","frostRes","energyRes","curseRes","pierceRes","cutRes","bluntRes","totalDamage","React","createContext","Transition","_React$Component","props","context","_this","call","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","_inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","performEnter","performExit","setState","_this2","appearing","_ref2","nodeRef","ReactDOM","findDOMNode","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","node","current","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","createElement","TransitionGroupContext","Provider","value","cloneElement","Children","only","Component","noop","contextType","propTypes","defaultProps","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","SkillButton","className","disabled","onClick","spendSkillPoints","skillLevel","number","ConnectedSkillTooltip","damageFormula","damageText","strengthCoeff","agilityCoeff","powerCoeff","knoCoeff","manaCoeff","skillLevels","skill","maxLvl","allEqual","arr","every","val","effectsHeaders","index","hittingMod","src","alt","colSpan","damageMod","healing","manaCost","calculateTotalCost","enduranceCost","effectsTables","effects","effect","calculateEffectScaling","duration","difficulty","knowRequired","AP","calculateKnoRequired","knowRequiredParagraphs","stats","style","entering","maxHeight","entered","exiting","exited","attackType","hitType","target","description","createDamageLine","calculateDamage","calculateHealing","createInfoTable","connector","connect","statsFromItems","character","weaponDamage","SkillTooltip","withTranslation","SkillLine","transitionStyles","transform","image","requiredCharLevel","color","minLvl","checkIfSkillCanIncrease","expanded","showTooltip","done","ConnectedSkillsCalculator","tooltipToShow","reset","skillName","resetSkillPoints","prevLvl","newLvl","changeSkill","skillPts","basicSkillsComponents","skillSet","classSkillsComponents","skills","dispatch"],"mappings":"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","file":"static/js/3.295b7986.chunk.js","sourcesContent":["//i18l\r\nimport i18n from \"i18next\";\r\n\r\nexport class ItemSet {\r\n  readonly name: string;\r\n  readonly hp: number;\r\n  readonly mana: number;\r\n  readonly endurance: number;\r\n  readonly strength: number;\r\n  readonly agility: number;\r\n  readonly power: number;\r\n  readonly knowledge: number;\r\n  readonly totalPieces: number;\r\n  readonly otherProperties: [string, number][];\r\n  constructor(setProperties: ItemSetProperties) {\r\n    this.name = setProperties.hasOwnProperty(\"name\") ? setProperties.name! : \"\";\r\n    this.hp = setProperties.hasOwnProperty(\"hp\") ? setProperties.hp! : 0;\r\n    this.mana = setProperties.hasOwnProperty(\"mana\") ? setProperties.mana! : 0;\r\n    this.endurance = setProperties.hasOwnProperty(\"endurance\")\r\n      ? setProperties.endurance!\r\n      : 0;\r\n    this.strength = setProperties.hasOwnProperty(\"strength\")\r\n      ? setProperties.strength!\r\n      : 0;\r\n    this.agility = setProperties.hasOwnProperty(\"agility\")\r\n      ? setProperties.agility!\r\n      : 0;\r\n    this.power = setProperties.hasOwnProperty(\"power\")\r\n      ? setProperties.power!\r\n      : 0;\r\n    this.knowledge = setProperties.hasOwnProperty(\"knowledge\")\r\n      ? setProperties.knowledge!\r\n      : 0;\r\n    this.totalPieces = setProperties.hasOwnProperty(\"pieces\")\r\n      ? setProperties.pieces!\r\n      : 3;\r\n    this.otherProperties = setProperties.hasOwnProperty(\"otherProperties\")\r\n      ? setProperties.otherProperties!\r\n      : [];\r\n    this.getValuesDependingOnPieces = this.getValuesDependingOnPieces.bind(this);\r\n    this.getOtherPropertiesValuesDependingOnPieces = this.getOtherPropertiesValuesDependingOnPieces.bind(this);\r\n    this.getOtherPropertiesValuesDependingOnPiecesAsArray = this.getOtherPropertiesValuesDependingOnPiecesAsArray.bind(this);\r\n    this.getValueModifier = this.getValueModifier.bind(this);\r\n  }\r\n  //Method returning the values the set provides depending on the number of pieces worn\r\n  public getValuesDependingOnPieces(currentPieces: number): SetPropertiesDependingOnPieces {\r\n    //getting the modifier of the value each stat provides\r\n    let valueModifier: number = this.getValueModifier(currentPieces);\r\n    //calculating values\r\n    let propertyValues: SetPropertiesDependingOnPieces = {\r\n      hp: Math.floor(this.hp * valueModifier),\r\n      mana: Math.floor(this.mana * valueModifier),\r\n      endurance: Math.floor(this.endurance * valueModifier),\r\n      strength: Math.floor(this.strength * valueModifier),\r\n      agility: Math.floor(this.agility * valueModifier),\r\n      knowledge: Math.floor(this.knowledge * valueModifier),\r\n      power: Math.floor(this.power * valueModifier),\r\n      otherProperties: this.getOtherPropertiesValuesDependingOnPieces(valueModifier)\r\n    }\r\n    return propertyValues\r\n  }\r\n  private getValueModifier(currentPieces: number): number {\r\n    let valueModifier: number = 0;\r\n    switch (currentPieces / this.totalPieces) {\r\n      case 1:\r\n        valueModifier = 1;\r\n        break;\r\n      case 0.8:\r\n        valueModifier = 0.6;\r\n        break;\r\n      case 0.75:\r\n        valueModifier = 0.5;\r\n        break;\r\n      case 2 / 3:\r\n        valueModifier = 0.4;\r\n        break;\r\n      case 0.6:\r\n        valueModifier = 0.4;\r\n        break;\r\n      case 0.5:\r\n        valueModifier = 0.25;\r\n        break;\r\n      case 0.4:\r\n        valueModifier = 0.2;\r\n        break;\r\n      default:\r\n        valueModifier = 0;\r\n        break;\r\n    }\r\n    return valueModifier\r\n  }\r\n  //Method returning the value of the otherProperties property in an easy to show form\r\n  private getOtherPropertiesValuesDependingOnPieces(valueModifier: number): string[] {\r\n    let propertyValues = this.otherProperties.map((x) => {\r\n      let valueDependingOnPieces: number = 0;\r\n      if (x[1] !== 1) {\r\n        valueDependingOnPieces = Math.floor(x[1] * valueModifier * 100) / 100;\r\n        let otherPropertyAsString = x[1] < 0 ? i18n.t(x[0]) + \": -\" + Math.abs(valueDependingOnPieces) + \"% (\" + x[1] + \"%)\" : i18n.t(x[0]) + \": +\" + valueDependingOnPieces + \"% (\" + x[1] + \"%)\"\r\n        return otherPropertyAsString;\r\n      } else {\r\n        valueDependingOnPieces = valueModifier === 1 ? 1 : 0;\r\n        return i18n.t(x[0]) + \": +\" + valueDependingOnPieces + \" (\" + x[1] + \")\";\r\n      }\r\n    });\r\n    return propertyValues;\r\n  }\r\n  public getOtherPropertiesValuesDependingOnPiecesAsArray(currentPieces: number): [string, number][] {\r\n    let valueModifier: number = this.getValueModifier(currentPieces);\r\n    let otherPropertyValues: [string, number][] = this.otherProperties.map(x => {\r\n      let valueDependingOnPieces: number = 0;\r\n      if (x[1] !== 1) {\r\n        valueDependingOnPieces = Math.floor(x[1] * valueModifier * 100) / 100;\r\n        return [i18n.t(x[0]), valueDependingOnPieces];\r\n      } else {\r\n        valueDependingOnPieces = valueModifier === 1 ? 1 : 0;\r\n        return [i18n.t(x[0]), valueDependingOnPieces]\r\n      }\r\n    });\r\n    return otherPropertyValues\r\n  }\r\n}\r\n\r\nexport interface ItemSetProperties {\r\n  name: string;\r\n  hp?: number;\r\n  mana?: number;\r\n  endurance?: number;\r\n  strength?: number;\r\n  agility?: number;\r\n  power?: number;\r\n  knowledge?: number;\r\n  pieces: number;\r\n  otherProperties: [string, number][];\r\n}\r\n\r\nexport interface SetPropertiesDependingOnPieces {\r\n  hp: number;\r\n  mana: number;\r\n  endurance: number;\r\n  strength: number;\r\n  agility: number;\r\n  power: number;\r\n  knowledge: number;\r\n  otherProperties: string[]\r\n}\r\n","import { ItemSet } from \"./models/item-set.model\"\r\nimport { ItemSetProperties } from \"./models/item-set.model\"\r\n\r\nconst itemSetData: ItemSetProperties[] = [{\r\n  name: \"Resztki Reffa\",\r\n  pieces: 3,\r\n  strength: 8,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Rozproszenie Holma\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Okowy Snu\",\r\n  pieces: 3,\r\n  hp: 50,\r\n  otherProperties: [\r\n    [\"Szansa na trafienie krytyczne\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Światła Tellabagu\",\r\n  pieces: 3,\r\n  hp: 100,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń fizycznych\", 10],\r\n    [\"Modyfikator obrażeń magicznych\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Przebranie Ludobójcy\",\r\n  pieces: 4,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 10],\r\n    [\"Szansa na podwójny atak\", 6]\r\n  ]\r\n},\r\n{\r\n  name: \"Zbroja Pinari\",\r\n  pieces: 3,\r\n  hp: 40,\r\n  otherProperties: [\r\n    [\"Odporność na korzenie\", 35],\r\n    [\"Szansa na podwójny atak\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Gniew Żywiołów\",\r\n  pieces: 4,\r\n  mana: 160,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Modyfikator obrażeń magicznych\", 15]\r\n  ]\r\n},\r\n{\r\n  name: \"Żądło Bogów\",\r\n  pieces: 4,\r\n  agility: 16,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Szansa na trafienie krytyczne\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Ryk Północy\",\r\n  pieces: 5,\r\n  agility: 16,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń fizycznych\", 10],\r\n    [\"Szansa na trafienie krytyczne\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Sztorm Haugura\",\r\n  pieces: 4,\r\n  hp: 160,\r\n  otherProperties: [\r\n    [\"Zużycie kondycji\", -8],\r\n    [\"Szansa na trafienie krytyczne\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Ostrze Równowagi\",\r\n  pieces: 4,\r\n  hp: 160,\r\n  otherProperties: [\r\n    [\"Regeneracja many\", 2],\r\n    [\"Regeneracja kondycji\", 2],\r\n    [\"Szansa na podwójny atak\", 10]\r\n  ]\r\n},\r\n{\r\n  name: \"Ukazanie Killarasuna\",\r\n  pieces: 4,\r\n  hp: 190,\r\n  otherProperties: [\r\n    [\"Zużycie many\", -10],\r\n    [\"Szansa na podwójny atak\", 8]\r\n  ]\r\n},\r\n{\r\n  name: \"Szaty Płynnego Ognia\",\r\n  pieces: 4,\r\n  mana: 160,\r\n  otherProperties: [\r\n    [\"Modyfikator obrażeń magicznych\", 10],\r\n    [\"Szansa na podwójny atak\", 5]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Vorlingów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Obrona wręcz\", 10],\r\n    [\"Odporność na trafienie krytyczne\", 9],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Dusza Świata\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Modyfikator trafień fizycznych\", 15],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Oko Bogów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Modyfikator trafień dystansowych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Nieśmiertelności\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Rozproszenie Holma\", 9],\r\n    [\"Modyfikator obrażeń fizycznych\", 15],\r\n    [\"Modyfikator trafień fizycznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pancerz Żywiołów\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Regeneracja many\", 2],\r\n    [\"Modyfikator obrażeń magicznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Pocałunek Miliona Gwiazd\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Modyfikator trafień dystansowych\", 15],\r\n    [\"Modyfikator obrażeń magicznych\", 15],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n},\r\n{\r\n  name: \"Zasłona Śmierci\",\r\n  pieces: 5,\r\n  hp: 250,\r\n  otherProperties: [\r\n    [\"Skok Farida\", 7],\r\n    [\"Modyfikator trafień magicznych\", 15],\r\n    [\"Szansa na podwójny atak\", 5],\r\n    [\"Dodatkowe PA\", 1],\r\n    [\"Oszukać przeznaczenie\", 1]\r\n  ]\r\n}]\r\n\r\nexport const itemSets = itemSetData.map(x => new ItemSet(x))\r\n","import { Equipment } from \"../store/equipment-reducer/equipment-reducer\"\r\n\r\ninterface SetsEquipped {\r\n    [key: string]: number\r\n}\r\n\r\nexport function checkWhichSetsAreEquipped(equipment: Equipment): SetsEquipped {\r\n  let equipmentTypes = Object.keys(equipment);\r\n  let equippedItems = equipmentTypes.map((x) => equipment[x as keyof Equipment]);\r\n  let setsEquipped = equippedItems.reduce((total: SetsEquipped, x) => {\r\n    if (x !== null && x.hasOwnProperty(\"set\") && x.set !== null) {\r\n      if (total.hasOwnProperty(x.set)) {\r\n        (total[x.set]) += 1;\r\n        return total;\r\n      } else {\r\n        total[x.set] = 1;\r\n        return total;\r\n      }\r\n    } else {\r\n      return total;\r\n    }\r\n  }, {});\r\n  return setsEquipped\r\n}\r\n","//Models\r\nimport { Equipment } from \"../store/equipment-reducer/equipment-reducer\";\r\n\r\n//Shared functionality\r\nimport { checkWhichSetsAreEquipped } from \"./check-which-sets-are-equipped\";\r\n\r\n//Data\r\nimport { itemSets } from \"../data/item-sets\";\r\n\r\nexport function calculateOtherProperties (equipment: Equipment) {\r\n  let setsEquipped = checkWhichSetsAreEquipped(equipment);\r\n  let propertiesOfSets = checkPropertiesOfSets(setsEquipped);\r\n  let propertiesOfEquippedItems = checkOtherPropertiesOfItems(equipment);\r\n  for (let property in propertiesOfSets) {\r\n    if (\r\n      propertiesOfSets.hasOwnProperty(property) &&\r\n      propertiesOfSets[property] !== 0\r\n    ) {\r\n      if (propertiesOfEquippedItems.hasOwnProperty(property)) {\r\n        propertiesOfEquippedItems[property] += propertiesOfSets[property];\r\n      } else {\r\n        propertiesOfEquippedItems[property] = propertiesOfSets[property];\r\n      }\r\n    }\r\n  }\r\n  return propertiesOfEquippedItems\r\n}\r\n\r\nfunction checkOtherPropertiesOfItems(equipment: Equipment) {\r\n    let equipmentTypes = Object.keys(equipment);\r\n    let equippedItems = equipmentTypes.map(\r\n      (x) => equipment[x as keyof Equipment]\r\n    );\r\n    let otherPropertiesOfEquippedItems = equippedItems.reduce(\r\n      (total: { [key: string]: number }, item) => {\r\n        if (\r\n          item !== null &&\r\n          (item.rarity === \"Psychorare\" || item.rarity === \"Epik\" || item.type === \"guild\") && item.psychoLvl\r\n        ) {\r\n          item.otherProperties.forEach((property) => {\r\n            if (total.hasOwnProperty(property[0])) {\r\n              total[property[0]] +=\r\n                property[1] + property[2] * (item.psychoLvl - 1);\r\n            } else {\r\n              total[property[0]] =\r\n                property[1] + property[2] * (item.psychoLvl - 1);\r\n            }\r\n          });\r\n          return total;\r\n        } else {\r\n          return total;\r\n        }\r\n      },\r\n      {}\r\n    );\r\n    return otherPropertiesOfEquippedItems;\r\n  }\r\n\r\n  function checkPropertiesOfSets(equippedSets: { [key: string]: number }) {\r\n    let setsProperties: { [key: string]: number } = {};\r\n    if (equippedSets) {\r\n      for (let setName in equippedSets) {\r\n        if (equippedSets.hasOwnProperty(setName)) {\r\n          let set = itemSets.find((x) => x.name === setName);\r\n          let setProperties = set!.getOtherPropertiesValuesDependingOnPiecesAsArray(\r\n            equippedSets[setName]\r\n          );\r\n          setProperties.forEach((property) => {\r\n            if (setsProperties.hasOwnProperty(property[0])) {\r\n              setsProperties[property[0]] += property[1];\r\n            } else {\r\n              setsProperties[property[0]] = property[1];\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    return setsProperties;\r\n  }\r\n","//Shared functionality\r\nimport { checkWhichSetsAreEquipped } from \"./check-which-sets-are-equipped\";\r\n\r\n//Data\r\nimport { itemSets } from \"../data/item-sets\";\r\n\r\n//Types\r\nimport { Equipment } from \"../store/equipment-reducer/equipment-reducer\";\r\nimport { Item } from \"../data/models/item.model\";\r\n\r\n//calculating how much total of each stat equipment provides\r\nexport function calculateStatsFromItems(\r\n  equipment: Equipment,\r\n  level: number\r\n): StatsFromItems {\r\n  let equipmentTypes = Object.keys(equipment);\r\n  let equippedItems = equipmentTypes.map(\r\n    (x) => equipment[x as keyof Equipment]\r\n  );\r\n  //calculating stats from sets\r\n  let statsFromSets = calculateStateFromSets(equipment);\r\n  let equipmentStats = {\r\n    strength:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null\r\n            ? (total += x.calculateTotalStat(\"strength\"))\r\n            : (total += 0),\r\n        0\r\n      ) + statsFromSets.strength,\r\n    agility:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null ? (total += x.calculateTotalStat(\"agility\")) : (total += 0),\r\n        0\r\n      ) + statsFromSets.agility,\r\n    power:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null ? (total += x.calculateTotalStat(\"power\")) : (total += 0),\r\n        0\r\n      ) + statsFromSets.power,\r\n    knowledge:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null\r\n            ? (total += x.calculateTotalStat(\"knowledge\"))\r\n            : (total += 0),\r\n        0\r\n      ) + statsFromSets.knowledge,\r\n    hp:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null ? (total += x.calculateTotalStat(\"hp\")) : (total += 0),\r\n        0\r\n      ) + statsFromSets.hp,\r\n    endurance:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null\r\n            ? (total += x.calculateTotalStat(\"endurance\"))\r\n            : (total += 0),\r\n        0\r\n      ) + statsFromSets.endurance,\r\n    mana:\r\n      equippedItems.reduce(\r\n        (total, x) =>\r\n          x != null ? (total += x.calculateTotalStat(\"mana\")) : (total += 0),\r\n        0\r\n      ) + statsFromSets.mana,\r\n    damage: calculateTotalDamage(equipment.weapon, equipment.special, level),\r\n    fireRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.fireRes) : (total += 0)),\r\n      0\r\n    ),\r\n    frostRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.frostRes) : (total += 0)),\r\n      0\r\n    ),\r\n    energyRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.energyRes) : (total += 0)),\r\n      0\r\n    ),\r\n    curseRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.curseRes) : (total += 0)),\r\n      0\r\n    ),\r\n    pierceRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.pierceRes) : (total += 0)),\r\n      0\r\n    ),\r\n    cutRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.cutRes) : (total += 0)),\r\n      0\r\n    ),\r\n    bluntRes: equippedItems.reduce(\r\n      (total, x) => (x != null ? (total += x.bluntRes) : (total += 0)),\r\n      0\r\n    ),\r\n  };\r\n  return equipmentStats;\r\n}\r\n\r\n//calculating how much total of each stat item sets provide\r\nfunction calculateStateFromSets(equipment: Equipment): Stats {\r\n  let setsEquipped = checkWhichSetsAreEquipped(equipment);\r\n  let statsFromSets = {\r\n    hp: 0,\r\n    mana: 0,\r\n    endurance: 0,\r\n    strength: 0,\r\n    agility: 0,\r\n    power: 0,\r\n    knowledge: 0,\r\n  };\r\n  if (Object.keys(setsEquipped).length > 0) {\r\n    for (let key in setsEquipped) {\r\n      if (setsEquipped.hasOwnProperty(key)) {\r\n        let equippedSet = itemSets.find((x) => x.name === key);\r\n        let eqippedSetProperties = equippedSet!.getValuesDependingOnPieces(\r\n          setsEquipped[key]\r\n        );\r\n        statsFromSets.hp += eqippedSetProperties.hp;\r\n        statsFromSets.mana += eqippedSetProperties.mana;\r\n        statsFromSets.endurance += eqippedSetProperties.endurance;\r\n        statsFromSets.strength += eqippedSetProperties.strength;\r\n        statsFromSets.agility += eqippedSetProperties.agility;\r\n        statsFromSets.power += eqippedSetProperties.power;\r\n        statsFromSets.knowledge += eqippedSetProperties.knowledge;\r\n      }\r\n    }\r\n  }\r\n  return statsFromSets;\r\n}\r\n\r\nfunction calculateTotalDamage(\r\n  weapon: Item | null,\r\n  special: Item | null,\r\n  level: number\r\n) {\r\n  let totalDamage = 0;\r\n  if (weapon) {\r\n    totalDamage += weapon.calculateTotalDamage(level);\r\n  }\r\n  if (special) {\r\n    totalDamage += special.damage;\r\n  }\r\n  return totalDamage;\r\n}\r\n\r\ninterface Resists {\r\n  bluntRes: number;\r\n  cutRes: number;\r\n  pierceRes: number;\r\n  fireRes: number;\r\n  energyRes: number;\r\n  curseRes: number;\r\n  frostRes: number;\r\n}\r\n\r\ninterface Stats {\r\n  hp: number;\r\n  mana: number;\r\n  endurance: number;\r\n  strength: number;\r\n  agility: number;\r\n  power: number;\r\n  knowledge: number;\r\n}\r\n\r\ninterface StatsFromItems extends Resists, Stats {\r\n  damage: number;\r\n}\r\n","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : PropTypes.instanceOf(Element)\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import React from \"react\";\r\n\r\nexport function SkillButton(props: PropTypes) {\r\n    return (\r\n      <button\r\n        className={\"inlineButton\"}\r\n        disabled={props.active}\r\n        onClick={() => {\r\n          props.spendSkillPoints(\r\n            props.skillLevel,\r\n            props.skillLevel + props.value,\r\n            props.number\r\n          );\r\n        }}\r\n      >\r\n        {props.value > 0 ? \"+\" : null}{props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\ninterface PropTypes {\r\n  skillLevel: number;\r\n  active: boolean\r\n  spendSkillPoints(prevLvl: number, newLvl: number, skill: number): void;\r\n  number: number;\r\n  value: number\r\n}\r\n","//React\r\nimport React from \"react\";\r\n\r\n//Redux\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"../../../../../store/store\";\r\n\r\n//Types\r\nimport { Skill } from \"../../../../../data/models/skill.model\";\r\nimport { TransitionStatus } from \"react-transition-group/Transition\";\r\n\r\n//Shared functionality\r\nimport { calculateStatsFromItems } from \"../../../../../shared/calculate-stats-from-items\";\r\nimport { calculateOtherProperties } from \"../../../../../shared/calculate-other-properties\";\r\n\r\n//i18l\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nexport class ConnectedSkillTooltip extends React.Component<PropTypes> {\r\n  createDamageLine(damageFormula: DamageFormula): string {\r\n    let damageText: string = damageFormula\r\n      ? damageFormula.strengthCoeff && damageFormula.agilityCoeff\r\n        ? `${damageFormula.strengthCoeff} * ${this.props.t(\"strength\")} + ${\r\n            damageFormula.agilityCoeff\r\n          } * ${this.props.t(\"agility\")}`\r\n        : damageFormula.powerCoeff && damageFormula.knoCoeff\r\n        ? `${damageFormula.powerCoeff} * ${this.props.t(\"power\")} + ${\r\n            damageFormula.knoCoeff\r\n          } * ${this.props.t(\"knowledge\")}`\r\n        : \"\"\r\n      : \"\";\r\n    damageText +=\r\n      damageFormula && damageFormula.manaCoeff\r\n        ? `+ ${damageFormula.manaCoeff} * ${this.props.t(\"mana\")}`\r\n        : \"\";\r\n    damageText +=\r\n      damageFormula && damageFormula.weapon ? ` + ${this.props.t(\"broń\")}` : \"\";\r\n    return damageText;\r\n  }\r\n  createInfoTable(): JSX.Element {\r\n    const skillLevels =\r\n      this.props.skill.maxLvl === 7\r\n        ? [\"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\"]\r\n        : [\"I\"];\r\n    const allEqual = (arr: number[]) => arr.every((val) => val === arr[0]);\r\n    const effectsHeaders = (\r\n      <tr>\r\n        <th className=\"emptyCell\"></th>\r\n        {skillLevels.map((level, index) => (\r\n          <th\r\n            key={level}\r\n            className={\r\n              this.props.skill.level && this.props.skill.level - 1 === index\r\n                ? \"currentLevel\"\r\n                : undefined\r\n            }\r\n          >\r\n            {level}\r\n          </th>\r\n        ))}\r\n      </tr>\r\n    );\r\n    const hittingMod = this.props.skill.hittingMod ? (\r\n      <tr>\r\n        <td>\r\n          <img src={`images/hittingMod.svg`} alt=\"hittingMod\" />\r\n          {this.props.t(\"Szansa trafienia\")}\r\n        </td>\r\n        {allEqual(this.props.skill.hittingMod) ? (\r\n          <td\r\n            className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n            colSpan={7}\r\n          >\r\n            {Math.floor(this.props.skill.hittingMod[0] * 10) / 10}%\r\n          </td>\r\n        ) : (\r\n          this.props.skill.hittingMod.map((x, index) => (\r\n            <td\r\n              key={index}\r\n              className={\r\n                this.props.skill.level && this.props.skill.level - 1 === index\r\n                  ? \"currentLevel\"\r\n                  : undefined\r\n              }\r\n            >\r\n              {Math.floor(x * 10) / 10}%\r\n            </td>\r\n          ))\r\n        )}\r\n      </tr>\r\n    ) : null;\r\n    const damageMod = this.props.skill.damageMod ? (\r\n      <tr>\r\n        <td>\r\n          <img\r\n            src={`images/${\r\n              this.props.skill.healing ? \"healing\" : \"damage\"\r\n            }.svg`}\r\n            alt=\"damage\"\r\n          />\r\n          {this.props.skill.healing\r\n            ? this.props.t(\"Siła leczenia\")\r\n            : this.props.t(\"Obrażenia\")}\r\n        </td>\r\n        {allEqual(this.props.skill.damageMod) ? (\r\n          <td\r\n            className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n            colSpan={7}\r\n          >\r\n            {Math.floor(this.props.skill.damageMod[0] * 10) / 10}%\r\n          </td>\r\n        ) : (\r\n          this.props.skill.damageMod.map((x, index) => (\r\n            <td\r\n              key={index}\r\n              className={\r\n                this.props.skill.level && this.props.skill.level - 1 === index\r\n                  ? \"currentLevel\"\r\n                  : undefined\r\n              }\r\n            >\r\n              {Math.floor(x * 10) / 10}%\r\n            </td>\r\n          ))\r\n        )}\r\n      </tr>\r\n    ) : null;\r\n    const manaCost = this.props.skill.manaCost ? (\r\n      <tr>\r\n        <td>\r\n          <img src={`images/mana.svg`} alt=\"mana\" />\r\n          {this.props.t(\"mana\")}\r\n        </td>\r\n        {allEqual(this.props.skill.manaCost) ? (\r\n          <td\r\n            className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n            colSpan={7}\r\n          >\r\n            {this.props.skill.calculateTotalCost(1, this.props.otherProperties, \"mana\")}\r\n          </td>\r\n        ) : (\r\n          this.props.skill.manaCost.map((x, index) => (\r\n            <td\r\n              key={index}\r\n              className={\r\n                this.props.skill.level && this.props.skill.level - 1 === index\r\n                  ? \"currentLevel\"\r\n                  : undefined\r\n              }\r\n            >\r\n              {this.props.skill.calculateTotalCost(index, this.props.otherProperties, \"mana\")}\r\n            </td>\r\n          ))\r\n        )}\r\n      </tr>\r\n    ) : null;\r\n    const enduranceCost = this.props.skill.enduranceCost ? (\r\n      <tr>\r\n        <td>\r\n          <img src={`images/endurance.svg`} alt=\"endurance\" />\r\n          {this.props.t(\"endurance\")}\r\n        </td>\r\n        {allEqual(this.props.skill.enduranceCost) ? (\r\n          <td\r\n            className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n            colSpan={7}\r\n          >\r\n            {this.props.skill.calculateTotalCost(1, this.props.otherProperties, \"endurance\")}\r\n          </td>\r\n        ) : (\r\n          this.props.skill.enduranceCost.map((x, index) => (\r\n            <td\r\n              key={index}\r\n              className={\r\n                this.props.skill.level && this.props.skill.level - 1 === index\r\n                  ? \"currentLevel\"\r\n                  : undefined\r\n              }\r\n            >\r\n              {this.props.skill.calculateTotalCost(index, this.props.otherProperties, \"endurance\")}\r\n            </td>\r\n          ))\r\n        )}\r\n      </tr>\r\n    ) : null;\r\n    const effectsTables = this.props.skill.effects\r\n      ? this.props.skill.effects.map((effect) => (\r\n          <tr key={effect.name}>\r\n            <td>{this.props.t(effect.name)}</td>\r\n            {allEqual(effect.effect) ? (\r\n              <td\r\n                className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n                colSpan={7}\r\n              >\r\n                {effect.effect[0] > 0 ? \"+\" : null}\r\n                {Math.floor(effect.effect[0] * 10) / 10}\r\n                {effect.type === \"numeric\" ? null : \"%\"}\r\n              </td>\r\n            ) : (\r\n              effect.effect.map((x, index) => (\r\n                <td\r\n                  key={index}\r\n                  className={\r\n                    this.props.skill.level &&\r\n                    this.props.skill.level - 1 === index\r\n                      ? \"currentLevel\"\r\n                      : undefined\r\n                  }\r\n                >\r\n                  {x > 0 && this.props.skill.name !== \"Wataha\" ? \"+\" : null}\r\n                  {Math.floor(this.props.skill.calculateEffectScaling(effect, index, this.props.level) * 10) / 10}\r\n                  {effect.type === \"numeric\" ? null : \"%\"}\r\n                </td>\r\n              ))\r\n            )}\r\n          </tr>\r\n        ))\r\n      : null;\r\n    const duration = this.props.skill.duration ? (\r\n      <tr>\r\n        <td>\r\n          <img src={`images/duration.svg`} alt=\"duration\" />\r\n          {this.props.t(\"Czas trwania\")}\r\n        </td>\r\n        {allEqual(this.props.skill.duration) ? (\r\n          <td\r\n            className={this.props.skill.level ? \"currentLevel\" : undefined}\r\n            colSpan={7}\r\n          >\r\n            {Math.floor(this.props.skill.duration[0] * 10) / 10}\r\n          </td>\r\n        ) : (\r\n          this.props.skill.duration.map((x, index) => (\r\n            <td\r\n              key={index}\r\n              className={\r\n                this.props.skill.level && this.props.skill.level - 1 === index\r\n                  ? \"currentLevel\"\r\n                  : undefined\r\n              }\r\n            >\r\n              {Math.floor(x * 10) / 10}\r\n            </td>\r\n          ))\r\n        )}\r\n      </tr>\r\n    ) : null;\r\n    const difficulty = this.props.skill.difficulty ? (\r\n      <tr>\r\n        <td className=\"rowName\">\r\n          <img src={`images/difficulty.svg`} alt=\"difficulty\" />\r\n          {this.props.t(\"Trudność\")}\r\n        </td>\r\n        {this.props.skill.difficulty.map((x, index) => (\r\n          <td\r\n            key={index}\r\n            className={\r\n              this.props.skill.level && this.props.skill.level - 1 === index\r\n                ? \"currentLevel\"\r\n                : undefined\r\n            }\r\n          >\r\n            {Math.floor(x * 10) / 10}\r\n          </td>\r\n        ))}\r\n      </tr>\r\n    ) : null;\r\n    return (\r\n      <div className=\"descriptionLine\">\r\n        <table>\r\n          <tbody>\r\n            {effectsHeaders}\r\n            {hittingMod}\r\n            {damageMod}\r\n            {enduranceCost}\r\n            {manaCost}\r\n            {difficulty}\r\n            {duration}\r\n            {effectsTables}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    const transitionStyles: { [id: string]: React.CSSProperties } = {\r\n      entering: { maxHeight: \"70em\" },\r\n      entered: { maxHeight: \"70em\" },\r\n      exiting: { maxHeight: 0 },\r\n      exited: { maxHeight: 0 },\r\n    };\r\n    const { t } = this.props;\r\n    const knowRequired = [3, 2, 1].map((AP) =>\r\n      this.props.skill.calculateKnoRequired(this.props.level, AP)\r\n    );\r\n    const knowRequiredParagraphs = [3, 2, 1].map((knowRequired, index) => (\r\n      <p key={index}>\r\n        {t(\"know-req\")} {knowRequired} {t(\"PA\")}:{\" \"}\r\n        {this.props.skill.calculateKnoRequired(this.props.level, knowRequired)}{\" \"}\r\n        (\r\n        {this.props.skill.calculateKnoRequired(\r\n          this.props.level,\r\n          knowRequired\r\n        ) <= this.props.stats.knowledge\r\n          ? t(\"Osiągnięto\")\r\n          : `${t(\"potrzeba\")} ${\r\n              this.props.skill.calculateKnoRequired(\r\n                this.props.level,\r\n                knowRequired\r\n              ) - this.props.stats.knowledge\r\n            }`}\r\n        )\r\n      </p>\r\n    ));\r\n    return (\r\n      <div className=\"skillTooltip\" style={transitionStyles[this.props.state]}>\r\n        <div className=\"basicInfo\">\r\n          <div className=\"descriptionLine\">\r\n            <img\r\n              src={`images/${\r\n                this.props.skill.type === \"attack\" &&\r\n                !this.props.skill.damageMod &&\r\n                !this.props.skill.damageFormula\r\n                  ? \"debuff\"\r\n                  : this.props.skill.type\r\n              }.svg`}\r\n              alt=\"attack type\"\r\n            />\r\n            <div className=\"description\">\r\n              {t(\"Rodzaj umiejętności\")}:{\" \"}\r\n              {t(\r\n                this.props.skill.type === \"attack\" &&\r\n                  !this.props.skill.damageMod &&\r\n                  !this.props.skill.damageFormula\r\n                  ? \"debuff\"\r\n                  : this.props.skill.type\r\n              )}\r\n            </div>\r\n          </div>\r\n          {this.props.skill.type === \"attack\" && this.props.skill.attackType ? (\r\n            <div className=\"descriptionLine\">\r\n              <img\r\n                src={`images/${this.props.skill.attackType}.svg`}\r\n                alt=\"attack type\"\r\n              />\r\n              <div className=\"description\">\r\n                {t(\"Strefa ataku\")}: {t(this.props.skill.attackType)}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {this.props.skill.type === \"attack\" && this.props.skill.hitType ? (\r\n            <div className=\"descriptionLine\">\r\n              <img\r\n                src={`images/${this.props.skill.hitType}.svg`}\r\n                alt=\"hit type\"\r\n              />\r\n              <div className=\"description\">\r\n                {t(\"Atrybut do trafienia\")}: {t(this.props.skill.hitType)}\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"descriptionLine\">\r\n            <img\r\n              src={`images/${this.props.skill.target}.svg`}\r\n              alt=\"attack type\"\r\n            />\r\n            <div className=\"description\">\r\n              {t(\"Cel\")}: {t(this.props.skill.target)}\r\n            </div>\r\n          </div>\r\n          <div className=\"descriptionLine\">\r\n            <div className=\"description\">{t(this.props.skill.description)}</div>\r\n          </div>\r\n        </div>\r\n        {this.props.skill.level && this.props.skill.damageFormula ? (\r\n          <hr />\r\n        ) : null}\r\n        {this.props.skill.level && this.props.skill.damageFormula ? (\r\n          <div className=\"tooltipLine\">\r\n            <img src=\"images/damage.svg\" alt=\"damage\" />\r\n            <div className=\"damage\">\r\n              <p>\r\n                {t(\"Formuła\")}:{\" \"}\r\n                {this.createDamageLine(this.props.skill.damageFormula)}\r\n              </p>\r\n              <p>\r\n                {t(\"avg-damage\")}:{\" \"}\r\n                {this.props.skill.calculateDamage(\r\n                  this.props.stats,\r\n                  this.props.otherProperties\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.props.skill.level && this.props.skill.healing ? (\r\n          <div className=\"tooltipLine\">\r\n            <img src=\"images/healing.svg\" alt=\"damage\" />\r\n            <div className=\"damage\">\r\n              <p>\r\n                {t(\"Formuła\")}:{\" \"}\r\n                {`(1.3 * ${t(\"power\")} + 0.7 * ${t(\"knowledge\")}) * ${t(\r\n                  \"Siła leczenia\"\r\n                )} * (1 + ${t(\"Modyfikator obrażeń\")} / 2)`}\r\n              </p>\r\n              <p>\r\n                {t(\"Leczenie\")}:{\" \"}\r\n                {this.props.skill.calculateHealing(\r\n                  this.props.stats,\r\n                  this.props.otherProperties\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.props.skill.level &&\r\n        this.props.skill.type === \"buff\" &&\r\n        this.props.skill.difficulty ? (\r\n          <hr />\r\n        ) : null}\r\n        {this.props.skill.level &&\r\n        this.props.skill.type === \"buff\" &&\r\n        this.props.skill.difficulty ? (\r\n          <div className=\"tooltipLine\">\r\n            <img src=\"images/difficulty.svg\" alt=\"difficulty\" />\r\n            <div className=\"damage\">\r\n              <p>\r\n                {t(\"Trudność\")}:{\" \"}\r\n                {this.props.skill.level\r\n                  ? this.props.skill.difficulty[this.props.skill.level - 1]\r\n                  : 0}\r\n              </p>\r\n              <p>\r\n                {t(\"req-ap\")}:{\" \"}\r\n                {this.props.stats.knowledge < knowRequired[0]\r\n                  ? 4\r\n                  : this.props.stats.knowledge < knowRequired[1]\r\n                  ? 3\r\n                  : this.props.stats.knowledge < knowRequired[2]\r\n                  ? 2\r\n                  : 1}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.props.skill.level &&\r\n        this.props.skill.type === \"buff\" &&\r\n        this.props.skill.difficulty ? (\r\n          <hr />\r\n        ) : null}\r\n        {this.props.skill.level &&\r\n        this.props.skill.type === \"buff\" &&\r\n        this.props.skill.difficulty ? (\r\n          <div className=\"tooltipLine\">\r\n            <img src=\"images/knowledge.svg\" alt=\"knowledge\" />\r\n            <div className=\"damage\">\r\n              {knowRequiredParagraphs}\r\n              <p>\r\n                {t(\"current-kno\")}: {this.props.stats.knowledge}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.props.skill.name !== \"Ucieczka\" ? <hr /> : null}\r\n        {this.props.skill.name !== \"Ucieczka\" ? (\r\n          <div className=\"basicInfo\">{this.createInfoTable()}</div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  let statsFromItems = calculateStatsFromItems(\r\n    state.equipment,\r\n    state.character.level\r\n  );\r\n  return {\r\n    level: state.character.level,\r\n    stats: {\r\n      strength: state.stats.strength + statsFromItems.strength,\r\n      agility: state.stats.agility + statsFromItems.agility,\r\n      power: state.stats.power + statsFromItems.power,\r\n      knowledge: state.stats.knowledge + statsFromItems.knowledge,\r\n      // hp: state.stats.hp,\r\n      // endurance: state.stats.endurance,\r\n      mana: state.stats.mana + statsFromItems.mana,\r\n      weaponDamage: statsFromItems.damage,\r\n    },\r\n    otherProperties: calculateOtherProperties(state.equipment),\r\n  };\r\n};\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\nexport const SkillTooltip = withTranslation()(connector(ConnectedSkillTooltip));\r\n\r\n//Types\r\ntype PropTypes = ConnectedProps<typeof connector> & OwnProps;\r\n\r\ninterface OwnProps {\r\n  skill: Skill;\r\n  state: TransitionStatus;\r\n  t(string: string): string;\r\n}\r\n\r\ntype DamageFormula = {\r\n  strengthCoeff: number;\r\n  agilityCoeff: number;\r\n  powerCoeff: number;\r\n  knoCoeff: number;\r\n  manaCoeff: number;\r\n  weapon: boolean;\r\n} | null;\r\n","//React\r\nimport React from \"react\";\r\nimport { Transition } from \"react-transition-group\";\r\n\r\n//Components\r\nimport { SkillButton } from \"./skill-buttons/SkillButton\";\r\nimport { SkillTooltip } from \"./skill-tooltip/SkillTooltip\";\r\n\r\n//Types\r\nimport { Skill } from \"../../../../data/models/skill.model\";\r\n\r\nexport function SkillLine(props: PropTypes) {\r\n  let notMeetingRequirements = {\r\n    color: \"red\",\r\n  };\r\n  const { t } = props;\r\n  const transitionStyles: { [id: string]: React.CSSProperties } = {\r\n    entering: { transform: \"scaleY(-1)\" },\r\n    entered: { transform: \"scaleY(-1)\" },\r\n    exiting: { transform: \"scaleY(1)\"},\r\n    exited: { transform: \"scaleY(1)\" },\r\n  };\r\n  return (\r\n    <div className=\"skillLine\">\r\n      <div className=\"image\">\r\n        <img src={props.skill.image} alt={t(props.skill.name)} />\r\n      </div>\r\n      <div className=\"skillName\">\r\n        <p>{t(props.skill.name)}</p>\r\n      </div>\r\n      <div className=\"skillValue\">\r\n        <p>{props.skill.level}</p>\r\n      </div>\r\n      {props.skill.level === props.skill.maxLvl ? (\r\n        <div className=\"reqLvl\">\r\n          <p>{t(\"max-skill-lvl-reached\")}</p>\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"reqLvl\"\r\n          style={\r\n            props.skill.requiredCharLevel > props.level\r\n              ? notMeetingRequirements\r\n              : undefined\r\n          }\r\n        >\r\n          <div className=\"reqLvlText\">\r\n            <p>{t(\"req-lvl-upgrade-skill\")}:</p>\r\n          </div>\r\n          <div className=\"reqLvlNumber\">\r\n            <p>{props.skill.requiredCharLevel}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"skillButtons\">\r\n        <div className=\"minusButton\">\r\n          <SkillButton\r\n            spendSkillPoints={props.spendSkillPoints}\r\n            skillLevel={props.skill.level}\r\n            value={-1}\r\n            number={props.number}\r\n            active={props.skill.level === props.skill.minLvl}\r\n          />\r\n        </div>\r\n        <div className=\"plusButton\">\r\n          <SkillButton\r\n            spendSkillPoints={props.spendSkillPoints}\r\n            skillLevel={props.skill.level}\r\n            value={1}\r\n            number={props.number}\r\n            active={\r\n              props.skill.level === props.skill.maxLvl ||\r\n              props.skill.requiredCharLevel > props.level ||\r\n              !props.checkIfSkillCanIncrease(props.skill.level + 1)\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"expand\"\r\n        onClick={() =>\r\n          props.expanded === props.skill.name\r\n            ? props.showTooltip(\"\")\r\n            : props.showTooltip(props.skill.name)\r\n        }\r\n      >\r\n        <Transition in={props.expanded === props.skill.name}\r\n        addEndListener={(node, done) => {}}>\r\n          {(state) => <img src=\"images/arrdown.svg\" alt=\"expand\" style={transitionStyles[state]} />}\r\n        </Transition>\r\n      </div>\r\n      <Transition\r\n        in={props.expanded === props.skill.name}\r\n        addEndListener={(node, done) => {}}\r\n      >\r\n        {(state) => (\r\n          <SkillTooltip\r\n            skill={props.skill}\r\n            state={state}\r\n          />\r\n        )}\r\n      </Transition>\r\n    </div>\r\n  );\r\n}\r\n// {props.expanded === props.skill.name ? (\r\n//   <img src=\"images/arrup.png\" alt=\"expand\" />\r\n// ) : (\r\n//   <img src=\"images/arrdown.png\" alt=\"expand\" />\r\n// )}\r\n\r\ninterface PropTypes {\r\n  level: number;\r\n  skill: Skill;\r\n  checkIfSkillCanIncrease(newLvl: number): boolean;\r\n  spendSkillPoints(prevLvl: number, newLvl: number, skill: number): void;\r\n  number: number;\r\n  t(string: string): string;\r\n  showTooltip(skillName: string): void;\r\n  expanded: string;\r\n}\r\n","//React\r\nimport React from \"react\";\r\n\r\n//Redux\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"../../../store/store\";\r\nimport { Dispatch } from \"redux\";\r\n\r\n//Components\r\nimport { SkillLine } from \"./skill-line/SkillLine\";\r\n\r\n//Actions\r\nimport { changeSkill } from \"../../../store/skills-reducer/skills-reducer\";\r\nimport { resetSkillPoints } from \"../../../store/skills-reducer/skills-reducer\";\r\n\r\n//i18l\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nclass ConnectedSkillsCalculator extends React.Component<PropTypes, StateTypes> {\r\n  constructor(props: PropTypes) {\r\n    super(props);\r\n    this.state = {\r\n      tooltipToShow: \"\"\r\n    }\r\n    this.spendSkillPoints = this.spendSkillPoints.bind(this);\r\n    this.checkIfSkillCanIncrease = this.checkIfSkillCanIncrease.bind(this);\r\n    this.reset = this.reset.bind(this);\r\n    this.showTooltip = this.showTooltip.bind(this)\r\n  }\r\n  showTooltip(skillName: string): void {\r\n    this.setState({tooltipToShow: skillName})\r\n  }\r\n  reset() {\r\n    this.props.resetSkillPoints();\r\n  }\r\n  spendSkillPoints(prevLvl: number, newLvl: number, skill: number) {\r\n    this.props.changeSkill(prevLvl, newLvl, skill);\r\n  }\r\n  checkIfSkillCanIncrease(newLvl: number) {\r\n    if (newLvl > this.props.skillPts) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    let negativePoints = {\r\n      color: \"red\",\r\n    };\r\n    let basicSkills = [1, 2, 3, 4, 5, 7, 6, 8];\r\n    let classSkills = [9, 10, 11, 12, 13, 14, 15, 16, 17];\r\n    let basicSkillsComponents = basicSkills.map((x) => (\r\n      <SkillLine\r\n      key={x}\r\n        level={this.props.level}\r\n        skill={this.props.skillSet[\"skill\" + x]}\r\n        checkIfSkillCanIncrease={this.checkIfSkillCanIncrease}\r\n        spendSkillPoints={this.spendSkillPoints}\r\n        number={x}\r\n        t={t}\r\n        showTooltip={this.showTooltip}\r\n        expanded={this.state.tooltipToShow}\r\n      />\r\n    ));\r\n    let classSkillsComponents = classSkills.map((x) => (\r\n      <SkillLine\r\n        key={x}\r\n        level={this.props.level}\r\n        skill={this.props.skillSet[\"skill\" + x]}\r\n        checkIfSkillCanIncrease={this.checkIfSkillCanIncrease}\r\n        spendSkillPoints={this.spendSkillPoints}\r\n        number={x}\r\n        t={t}\r\n        showTooltip={this.showTooltip}\r\n        expanded={this.state.tooltipToShow}\r\n      />\r\n    ));\r\n    return (\r\n      <div\r\n        className=\"skillCalculator\"\r\n      >\r\n        <div className=\"statPts\">\r\n          <p>\r\n            <span style={this.props.skillPts < 0 ? negativePoints : undefined}>\r\n              {t(\"Punkty umiejętności\")}: {this.props.skillPts}\r\n            </span>{\" \"}\r\n            <button className={\"inlineButton\"} onClick={() => this.reset()}>\r\n              {t(\"Reset\")}\r\n            </button>\r\n          </p>\r\n        </div>\r\n        <div className=\"skills\">\r\n          <div className=\"classSkills\">\r\n            <div>\r\n              <p>{t(\"Umiejętności klasowe\")}</p>\r\n            </div>\r\n            {classSkillsComponents}\r\n          </div>\r\n          <div className=\"classSkills\">\r\n            <div>\r\n              <p>{t(\"Umiejętności podstawowe\")}</p>\r\n            </div>\r\n            {basicSkillsComponents}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    skillPts: state.skills.skillPts,\r\n    skillSet: state.skills.skillSet,\r\n    level: state.character.level,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n  return {\r\n    changeSkill: (prevLvl: number, newLvl: number, skill: number) =>\r\n      dispatch(\r\n        changeSkill({\r\n          prevLvl: prevLvl,\r\n          newLvl: newLvl,\r\n          skill: \"skill\" + skill,\r\n        })\r\n      ),\r\n    resetSkillPoints: () => dispatch(resetSkillPoints()),\r\n  };\r\n};\r\n\r\ntype PropTypes = ConnectedProps<typeof connector> & OwnProps;\r\n\r\ninterface OwnProps {\r\n  t(string: string): string;\r\n}\r\n\r\ninterface StateTypes {\r\n  tooltipToShow: string\r\n}\r\n\r\nconst connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\nexport default withTranslation()(connector(ConnectedSkillsCalculator));\r\n"],"sourceRoot":""}